{"name":"Myweb","tagline":"test","body":"#django 学习笔记\r\nby flyoo 2015/9/20 \r\n\r\n------\r\n##实现原理\r\n\t通过构建视图函数和配置URL映射实现视图的网页显示\r\n##视图函数\r\n每一个视图总是以一个HttpRequest对象作为它的第一个参数\r\n##URL配置\r\n通过正则表达式解析URL，来与视图函数进行匹配\r\n> url与视图函数之间是一种松散耦合的关系\r\n##模板系统\r\n将页面设计和Python代码分离开，以致于更简洁更易于维护\r\n> django会一直使用Unicode对象而不是普通的字符串\r\n###字典和Contexts\r\npython的字典数据类型就是关键字和他们值的一个映射。contexts和字典类似，还提供更多的功能。\r\n\r\n>  同一模板可以渲染多个context，只进行一次模板创建然后多次调用render()方法渲染会更高效\r\n\r\n    from django.template import Template,Context\r\n\tt=('{{ }}xx xx{{ }}')\r\n\tc=Context({' ':  })\r\n\tt=render(c)\r\n\r\n当模板系统在变量名遇到点时，按照偶像哦啊顺序尝试进行查找：\r\n\r\n- 字典类型查找（比如foo[\"bar\"] )\r\n- 属性查找（比如foo.bar )\r\n- 方法调用(比如foo.bar() )\r\n- 列表类型索引查找(比如foo[bar] )\r\n\r\n系统使用找到的第一个有效类型，这是一种短路逻辑。\r\n\r\n###如何处理无效量\r\n\r\n如果变量不存在，系统默认为空字符串，不做任何事情来表述失败。\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}